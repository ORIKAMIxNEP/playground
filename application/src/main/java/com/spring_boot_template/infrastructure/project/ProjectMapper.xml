<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC
        "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spring_boot_template.infrastructure.project.ProjectMapper">

    <insert id="upsertProject">
        INSERT INTO projects(project_id,
                             project_name)
        VALUES (#{projectId.value},
                #{projectName.value})
        ON CONFLICT (project_id)
            DO UPDATE SET project_name = EXCLUDED.project_name
    </insert>

    <insert id="insertProjectParticipatingAccount">
        INSERT INTO project_participating_accounts(project_id,
                                                   participating_account_id)
        VALUES (#{projectId.value},
                #{participatingAccountId.value})
    </insert>

    <insert id="insertTask">
        INSERT INTO tasks(project_id,
                          task_id,
                          task_name,
                          status,
                          index)
        VALUES (#{projectId.value},
                #{taskId.value},
                #{taskName.value},
                #{status},
                #{index})
    </insert>

    <insert id="insertTaskAssignedAccount">
        INSERT INTO task_assigned_accounts(task_id,
                                           assigned_account_id)
        VALUES (#{taskId.value},
                #{assignedAccountId.value})
    </insert>

    <insert id="insertDueDateDetail">
        INSERT INTO due_date_details(task_id,
                                     due_date,
                                     postpone_count,
                                     max_postpone_count)
        VALUES (#{taskId.value},
                #{dueDate.value},
                #{postponeCount.value},
                #{maxPostponeCount.value})
    </insert>

    <select id="selectProjectIdsByAccountId" resultMap="Project">
        SELECT project_id
        FROM projects
                 INNER JOIN project_participating_accounts
                            on projects.project_id = project_participating_accounts.project_id
        WHERE participating_account_id = #{value}
            FOR UPDATE
    </select>

    <select id="selectProjectsByAccountId" resultMap="Project">
        SELECT project_id,
               project_name
        FROM projects
                 INNER JOIN project_participants
                            on projects.project_id = project_participants.project_id
        WHERE participating_account_id = #{value}
            FOR UPDATE
    </select>

    <select id="selectProjectByProjectId" resultMap="Project">
        SELECT project_name,
               participating_account_id
        FROM projects
                 INNER JOIN project_participating_accounts
                            on projects.project_id = project_participating_accounts.project_id
        WHERE projects.project_id = #{value}
            FOR UPDATE
    </select>

    <select id="selectTasksByProjectId" resultMap="Task">
        SELECT tasks.task_id,
               task_name,
               status,
               assigned_account_id
        FROM tasks
                 LEFT OUTER JOIN task_assigned_accounts
                                 on tasks.task_id = task_assigned_accounts.task_id
        WHERE project_id = #{value}
        ORDER BY index
            FOR UPDATE
    </select>

    <select id="selectDueDateDetailsByProjectId" resultMap="DueDateDetail">
        SELECT task_id,
               due_date,
               postpone_count,
               max_postpone_count
        FROM tasks
                 INNER JOIN due_date_details
                            on tasks.task_id = due_date_details.task_id
        WHERE project_id = #{value}
            FOR UPDATE
    </select>

    <delete id="deleteProject">
        DELETE
        FROM projects
        WHERE project_id = #{value}
    </delete>

    <delete id="deleteProjectParticipatingAccounts">
        DELETE
        FROM project_participating_accounts
        WHERE project_id = #{value}
    </delete>

    <delete id="deleteTasks">
        DELETE
        FROM tasks
        WHERE project_id = #{value}
    </delete>

    <resultMap id="Project" type="com.spring_boot_template.infrastructure.project.dto.ProjectDto">
        <association property="projectId" javaType="com.spring_boot_template.domain.model.project.value.ProjectId">
            <result property="value" column="project_id"/>
        </association>
        <association property="projectName" javaType="com.spring_boot_template.domain.model.project.value.ProjectName">
            <result property="value" column="project_name"/>
        </association>
        <collection property="participatingAccountIds"
                    ofType="com.spring_boot_template.domain.model.account.value.AccountId">
            <result property="value" column="participating_account_id"/>
        </collection>
    </resultMap>

    <resultMap id="Task" type="com.spring_boot_template.infrastructure.project.dto.TaskDto">
        <result property="status" column="status" typeHandler="org.apache.ibatis.type.EnumTypeHandler"/>
        <association property="taskId" javaType="com.spring_boot_template.domain.model.project.task.value.TaskId">
            <result property="value" column="task_id"/>
        </association>
        <association property="taskName" javaType="com.spring_boot_template.domain.model.project.task.value.TaskName">
            <result property="value" column="task_name"/>
        </association>
        <collection property="assignedAccountIds"
                    ofType="com.spring_boot_template.domain.model.account.value.AccountId">
            <result property="value" column="assigned_account_id"/>
        </collection>
    </resultMap>

    <resultMap id="DueDateDetail"
               type="com.spring_boot_template.infrastructure.project.dto.DueDateDetailDto">
        <result property="dueDate" column="due_date"/>
        <association property="taskId" javaType="com.spring_boot_template.domain.model.project.task.value.TaskId">
            <result property="value" column="task_id"/>
        </association>
        <association property="postponeCount"
                     javaType="com.spring_boot_template.domain.model.project.task.due_date_detail.value.PostponeCount">
            <constructor>
                <arg name="value" column="postpone_count"/>
            </constructor>
        </association>
        <association property="maxPostponeCount"
                     javaType="com.spring_boot_template.domain.model.project.task.due_date_detail.value.MaxPostponeCount">
            <constructor>
                <arg name="value" column="max_postpone_count"/>
            </constructor>
        </association>
    </resultMap>
</mapper>
