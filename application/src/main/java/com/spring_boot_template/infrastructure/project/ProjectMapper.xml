<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC
        "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spring_boot_template.infrastructure.project.ProjectMapper">

    <insert id="insert">
        INSERT INTO projects(project_id,
                             project_name,
                             participatingAccountIds)
        VALUES (#{id.value},
                #{name.value},
                #{participatingAccountIds})
    </insert>

    <insert id="insertTask">
        INSERT INTO tasks(project_id,
                          task_id,
                          task_name,
                          status,
                          assignedAccountIds,
                          due_date,
                          postpone_count,
                          max_postpone_count,
                          index)
        VALUES (#{projectId},
                #{id.value},
                #{name.value},
                #{status},
                #{assignedAccountIds},
                #{dueDate.value},
                #{postponeCount.value},
                #{maxPostponeCount.value},
                #{index})
    </insert>

    <select id="selectById"
            resultMap="Project">
        SELECT project_name
        FROM projects
        WHERE project_id = #{value}
    </select>

    <select id="selectParticipatingAccountIdsByProjectId"
            resultType="com.spring_boot_template.domain.model.account.AccountId">
        SELECT account_id
        FROM project_participation
        WHERE project_id = #{value}
    </select>

    <select id="selectTasksByProjectId" resultMap="Task">
        SELECT task_id,
               task_name,
               status,
               index
        FROM tasks
        WHERE project_id = #{value}
    </select>

    <select id="selectAssignedAccountIdsByProjectId"
            resultType="com.spring_boot_template.domain.model.account.value.AccountId">
        SELECT account_id
        FROM tasks
                 NATURAL JOIN task_assignment
        WHERE project_id = #{value}
    </select>

    <select id="selectDueDateDetailsByProjectId"
            resultMap="DueDateDetail">
        SELECT task_id,
               due_date,
               postpone_count,
               max_postpone_count
        FROM tasks
                 NATURAL JOIN task_due_date_detail
        WHERE project_id = #{value}
    </select>

    <update id="update">
        UPDATE projects
        SET project_name = #{name.value}
        WHERE project_id = #{id.value}
    </update>

    <update id="updateTask">
        UPDATE tasks
        SET task_name = #{name.value}
        WHERE task_id = #{id.value}
    </update>

    <delete id="delete">
        DELETE
        FROM projects
        WHERE project_id = #{value}
    </delete>

    <delete id="deleteTaskByProjectId">
        DELETE
        FROM tasks
        WHERE project_id = #{value}
    </delete>

    <delete id="deleteTaskByTaskId">
        DELETE
        FROM tasks
        WHERE task_id = #{value}
    </delete>

    <resultMap id="Project" type="com.spring_boot_template.infrastructure.project.dto.ProjectDto">
        <association property="projectId" javaType="com.spring_boot_template.domain.model.project.value.ProjectId">
            <constructor>
                <arg name="value" column="project_id"/>
            </constructor>
        </association>
        <association property="projectName"
                     javaType="com.spring_boot_template.domain.model.project.value.ProjectName">
            <constructor>
                <arg name="value" column="project_name"/>
            </constructor>
        </association>
        <collection property="participatingAccountIds" ofType="com.spring_boot_template.domain.model.account.AccountId"
                    select="selectParticipatingAccountIdsByProjectId">
            <constructor>
                <arg name="value" column="account_id"/>
            </constructor>
        </collection>
    </resultMap>

    <resultMap id="Task" type="com.spring_boot_template.infrastructure.project.dto.TaskDto">
        <result property="status" column="status"
                typeHandler="org.apache.ibatis.type.EnumTypeHandler"/>
        <result property="index" column="index"/>
        <association property="taskId" javaType="com.spring_boot_template.domain.model.project.task.value.TaskId">
            <constructor>
                <arg name="value" column="task_id"/>
            </constructor>
        </association>
        <association property="taskName"
                     javaType="com.spring_boot_template.domain.model.project.task.value.TaskName">
            <constructor>
                <arg name="value" column="task_name"/>
            </constructor>
        </association>
        <collection property="assignedAccountIds"
                    ofType="com.spring_boot_template.domain.model.account.value.AccountId"
                    select="selectAssignedAccountIdsByProjectId">
            <constructor>
                <arg name="value" column="account_id"/>
            </constructor>
        </collection>
    </resultMap>

    <resultMap id="DueDateDetail"
               type="com.spring_boot_template.infrastructure.project.dto.DueDateDetailDto">
        <association property="dueDate"
                     javaType="com.spring_boot_template.domain.model.project.task.due_date_detail.value.DueDateDetail">
            <constructor>
                <arg name="value" column="due_date"/>
            </constructor>
        </association>
        <association property="postponeCount"
                     javaType="com.spring_boot_template.domain.model.project.task.due_date_detail.value.PostponeCount">
            <constructor>
                <arg name="value" column="postpone_count"/>
            </constructor>
        </association>
        <association property="maxPostponeCount"
                     javaType="com.spring_boot_template.domain.model.project.task.due_date_detail.value.MaxPostponeCount">
            <constructor>
                <arg name="value" column="max_postpone_count"/>
            </constructor>
        </association>
    </resultMap>
</mapper>
