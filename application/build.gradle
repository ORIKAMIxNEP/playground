plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.2'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'org.jooq.jooq-codegen-gradle' version '3.19.18'
    id 'checkstyle'
    id 'com.diffplug.spotless' version '7.0.2'
}
apply plugin: 'com.diffplug.spotless'

group = 'com'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

repositories {
    mavenCentral()
}

dependencies {
    // Spring Boot
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // Database
    runtimeOnly group: 'org.postgresql', name: 'postgresql', version: '42.7.5'
    implementation group: 'org.jooq', name: 'jooq', version: '3.19.18'
    implementation group: 'org.jooq', name: 'jooq-meta', version: '3.19.18'
    implementation group: 'org.jooq', name: 'jooq-codegen', version: '3.19.18'
    implementation group: 'org.jooq', name: 'jooq-postgres-extensions', version: '3.19.18'
    jooqCodegen group: 'org.postgresql', name: 'postgresql', version: '42.7.5'
    implementation group: 'org.mybatis.spring.boot', name: 'mybatis-spring-boot-starter', version: '3.0.3'

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    // Utility
    implementation group: 'de.huxhorn.sulky', name: 'de.huxhorn.sulky.ulid', version: '8.3.0'

    // Testing
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation group: 'org.mockito', name: 'mockito-core', version: '5.15.2'
    testImplementation group: 'org.mockito', name: 'mockito-junit-jupiter', version: '5.15.2'

    // Documentation
    implementation group: 'org.springdoc', name: 'springdoc-openapi-starter-webmvc-ui', version: '2.8.4'
}

sourceSets.main {
    java.srcDirs('build/generated-sources/jooq')
}

jooq {
    if (!gradle.startParameter.taskNames.contains('bootRun')) {
        configuration {
            jdbc {
                driver = 'org.postgresql.Driver'
                url = 'jdbc:postgresql://172.18.0.2:5432/playground'

                File envFile = new File('../container/.env')
                Properties envProperties = new Properties()
                envProperties.load(envFile.newDataInputStream())

                user = envProperties.getProperty('POSTGRES_USER')
                password = envProperties.getProperty('POSTGRES_PASSWORD')
            }
            generator {
                database {
                    name = 'org.jooq.meta.postgres.PostgresDatabase'
                    inputSchema = 'public'
                    includes = '.*'
                }
                target {
                    packageName = 'com.playground.jooq'
                }
            }
        }
    }
}

bootRun {
    if (project.hasProperty('args')) {
        args project.args.toString().split('\\s+')
    }
}

test {
    useJUnitPlatform()
}

checkstyle {
    toolVersion = '10.21.1'
}

spotless {
    java {
        googleJavaFormat()
    }
}
