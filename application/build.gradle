plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.0'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'org.jooq.jooq-codegen-gradle' version '3.20.4'
    id 'checkstyle'
    id 'com.diffplug.spotless' version '7.0.4'
}

group = 'com'
version = '1.0.0'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    testCompileOnly {
        extendsFrom testAnnotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Spring Boot
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // Database
    implementation 'org.postgresql:postgresql'
    implementation group: 'org.jooq', name: 'jooq', version: '3.20.4'
    jooqCodegen 'org.postgresql:postgresql'

    // Lombok
    annotationProcessor 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    // Library
    implementation group: 'de.huxhorn.sulky', name: 'de.huxhorn.sulky.ulid', version: '8.3.0'

    // Testing
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // Documentation
    implementation group: 'org.springdoc', name: 'springdoc-openapi-starter-webmvc-ui', version: '2.8.8'
}

sourceSets.main {
    java.srcDirs('build/generated-sources/jooq')
}

jooq {
    if (!gradle.startParameter.taskNames.contains('bootRun')) {
        configuration {
            jdbc {
                driver = 'org.postgresql.Driver'
                url = 'jdbc:postgresql://172.18.0.2:5432/playground'

                File envFile = new File('../container/.env')
                Properties envProperties = new Properties()
                envProperties.load(envFile.newDataInputStream())

                user = envProperties.getProperty('POSTGRES_USER')
                password = envProperties.getProperty('POSTGRES_PASSWORD')
            }
            generator {
                database {
                    name = 'org.jooq.meta.postgres.PostgresDatabase'
                    inputSchema = 'public'
                    includes = '.*'
                }
                target {
                    packageName = 'com.playground.jooq'
                }
            }
        }
    }
}

test {
    useJUnitPlatform()
}

checkstyle {
    toolVersion = '10.21.1'
}

spotless {
    java {
        googleJavaFormat()
    }
}
